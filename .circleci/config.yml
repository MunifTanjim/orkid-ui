version: 2.1

###########################################################################################

jobs:
  build:
    working_directory: ~/orkid-ui
    docker: # run the steps with Docker
      - image: circleci/node:10 # ...with this image as the primary container; this is where all `steps` will run
      - image: redis:5 # and this image as the secondary service container
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: lint
          command: npm run lint
      - run:
          name: build
          command: CI=false npm run build

  publish-tags:
    working_directory: ~/orkid-ui
    environment:
      IMAGE_NAME: orkidio/orkid-ui
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker build and publish image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            CIRCLE_TAG="$(git tag -l --points-at HEAD)"
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$IMAGE_TAG .
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$IMAGE_TAG

##########################################################################################

workflows:
  version: 2
  build-publish:
    jobs:
      - build
      - publish-tags:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /v.*/
